{
    "schemes": [
        "http"
    ],
    "swagger": "2.0",
    "info": {
        "description": "Technical Test Backend Golang",
        "title": "CAR RENTAL",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "2.0"
    },
    "host": "localhost:3000",
    "basePath": "/",
    "paths": {
        "/bookings": {
            "get": {
                "description": "Retrieve a list of all bookings.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "bookings"
                ],
                "summary": "Retrieve list of bookings",
                "responses": {
                    "200": {
                        "description": "List of bookings",
                        "schema": {
                            "$ref": "#/definitions/models.Booking"
                        }
                    },
                    "404": {
                        "description": "No booking found",
                        "schema": {
                            "$ref": "#/definitions/pkg.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/pkg.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new booking.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "bookings"
                ],
                "summary": "Create a new booking",
                "parameters": [
                    {
                        "description": "Booking data",
                        "name": "booking",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.InputBooking"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Booking details",
                        "schema": {
                            "$ref": "#/definitions/models.Booking"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/pkg.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/pkg.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/bookings/{id}": {
            "get": {
                "description": "Retrieve a booking by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "bookings"
                ],
                "summary": "Retrieve booking by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Booking ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Booking details",
                        "schema": {
                            "$ref": "#/definitions/models.Booking"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/pkg.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Booking not found",
                        "schema": {
                            "$ref": "#/definitions/pkg.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/pkg.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update information of a booking.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "bookings"
                ],
                "summary": "Update booking information",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Booking ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Booking data",
                        "name": "booking",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.InputBooking"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Booking details",
                        "schema": {
                            "$ref": "#/definitions/models.Booking"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/pkg.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/pkg.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/pkg.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a booking by its ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "bookings"
                ],
                "summary": "Delete booking by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Booking ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Booking details",
                        "schema": {
                            "$ref": "#/definitions/models.Booking"
                        }
                    },
                    "404": {
                        "description": "Booking not found",
                        "schema": {
                            "$ref": "#/definitions/pkg.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/pkg.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/bookingtypes": {
            "get": {
                "description": "Retrieve a list of all bookingTypes.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "bookingTypes"
                ],
                "summary": "Retrieve list of bookingTypes",
                "responses": {
                    "200": {
                        "description": "List of bookingTypes",
                        "schema": {
                            "$ref": "#/definitions/models.BookingType"
                        }
                    },
                    "404": {
                        "description": "No bookingType found",
                        "schema": {
                            "$ref": "#/definitions/pkg.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/pkg.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new bookingType.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "bookingTypes"
                ],
                "summary": "Create a new bookingType",
                "parameters": [
                    {
                        "description": "BookingType data",
                        "name": "bookingType",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.InputBookingType"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Created bookingType",
                        "schema": {
                            "$ref": "#/definitions/models.BookingType"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/pkg.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/pkg.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/bookingtypes/{id}": {
            "get": {
                "description": "Retrieve a bookingType by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "bookingTypes"
                ],
                "summary": "Retrieve bookingType by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "BookingType ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "BookingType data",
                        "schema": {
                            "$ref": "#/definitions/models.BookingType"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/pkg.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "BookingType not found",
                        "schema": {
                            "$ref": "#/definitions/pkg.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/pkg.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update information of a bookingType.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "bookingTypes"
                ],
                "summary": "Update bookingType information",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "BookingType ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "BookingType data",
                        "name": "bookingType",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.InputBookingType"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated bookingType",
                        "schema": {
                            "$ref": "#/definitions/models.BookingType"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/pkg.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/pkg.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/pkg.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a bookingType by its ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "bookingTypes"
                ],
                "summary": "Delete bookingType by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "BookingType ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.BookingType"
                        }
                    },
                    "404": {
                        "description": "BookingType not found",
                        "schema": {
                            "$ref": "#/definitions/pkg.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/pkg.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/cars": {
            "get": {
                "description": "Retrieve a list of all available cars.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cars"
                ],
                "summary": "Retrieve list of cars",
                "responses": {
                    "200": {
                        "description": "List of cars",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Car"
                            }
                        }
                    },
                    "404": {
                        "description": "No car found",
                        "schema": {
                            "$ref": "#/definitions/pkg.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/pkg.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new car to the system.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cars"
                ],
                "summary": "Create a new car",
                "parameters": [
                    {
                        "description": "Car data",
                        "name": "car",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.InputCar"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created car",
                        "schema": {
                            "$ref": "#/definitions/models.Car"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/pkg.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/pkg.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/cars/{id}": {
            "get": {
                "description": "Retrieve a car by its unique ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cars"
                ],
                "summary": "Retrieve car by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Car ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Car details",
                        "schema": {
                            "$ref": "#/definitions/models.Car"
                        }
                    },
                    "400": {
                        "description": "Invalid car ID",
                        "schema": {
                            "$ref": "#/definitions/pkg.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Car not found",
                        "schema": {
                            "$ref": "#/definitions/pkg.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/pkg.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Modify details of an existing car.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cars"
                ],
                "summary": "Update car information",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Car ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated car data",
                        "name": "car",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.InputCar"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated car",
                        "schema": {
                            "$ref": "#/definitions/models.Car"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/pkg.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Car not found",
                        "schema": {
                            "$ref": "#/definitions/pkg.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/pkg.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Remove a car from the system using its ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cars"
                ],
                "summary": "Delete car by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Car ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Car successfully deleted",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid required param",
                        "schema": {
                            "$ref": "#/definitions/pkg.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Car not found",
                        "schema": {
                            "$ref": "#/definitions/pkg.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/pkg.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/customers": {
            "get": {
                "description": "Retrieve a list of all customers.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "customers"
                ],
                "summary": "Retrieve list of customers",
                "responses": {
                    "200": {
                        "description": "List of customers",
                        "schema": {
                            "$ref": "#/definitions/models.Customer"
                        }
                    },
                    "404": {
                        "description": "No customer found",
                        "schema": {
                            "$ref": "#/definitions/pkg.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/pkg.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new customer.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "customers"
                ],
                "summary": "Create a new customer",
                "parameters": [
                    {
                        "description": "Customer data",
                        "name": "customer",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.InputCustomer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Customer"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/pkg.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/pkg.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/customers/{id}": {
            "get": {
                "description": "Retrieve a customer by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "customers"
                ],
                "summary": "Retrieve customer by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Customer ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Customer details",
                        "schema": {
                            "$ref": "#/definitions/models.Customer"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/pkg.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Customer not found",
                        "schema": {
                            "$ref": "#/definitions/pkg.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/pkg.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update information of a customer.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "customers"
                ],
                "summary": "Update customer information",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Customer ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Customer data",
                        "name": "customer",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.InputCustomer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated customer",
                        "schema": {
                            "$ref": "#/definitions/models.Customer"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/pkg.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/pkg.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/pkg.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a customer by its ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "customers"
                ],
                "summary": "Delete customer by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Customer ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deleted customer",
                        "schema": {
                            "$ref": "#/definitions/models.Customer"
                        }
                    },
                    "404": {
                        "description": "Customer not found",
                        "schema": {
                            "$ref": "#/definitions/pkg.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/pkg.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/customers/{id}/membership": {
            "put": {
                "description": "Assign a membership to a customer by providing the membership ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "customers"
                ],
                "summary": "Assign membership to a customer",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Customer ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Membership data",
                        "name": "membership",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.InputMembershipID"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Customer with updated membership",
                        "schema": {
                            "$ref": "#/definitions/models.Customer"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/pkg.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Customer not found",
                        "schema": {
                            "$ref": "#/definitions/pkg.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/pkg.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Remove a membership assigned to a customer by providing the membership ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "customers"
                ],
                "summary": "Remove membership from a customer",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Customer ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Customer with removed membership",
                        "schema": {
                            "$ref": "#/definitions/models.Customer"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/pkg.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Customer not found",
                        "schema": {
                            "$ref": "#/definitions/pkg.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/pkg.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/driver-incentives": {
            "get": {
                "description": "Retrieve a list of all driver incentives.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "driverIncentives"
                ],
                "summary": "Retrieve list of driver incentives",
                "responses": {
                    "200": {
                        "description": "List of driver incentives",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.DriverIncentive"
                            }
                        }
                    },
                    "404": {
                        "description": "No driver incentive found",
                        "schema": {
                            "$ref": "#/definitions/pkg.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/pkg.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new driver incentive record.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "driverIncentives"
                ],
                "summary": "Create a new driver incentive",
                "parameters": [
                    {
                        "description": "Driver Incentive Data",
                        "name": "driverIncentive",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.InputDriverIncentive"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created driver incentive",
                        "schema": {
                            "$ref": "#/definitions/models.DriverIncentive"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/pkg.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/pkg.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/driver-incentives/driver/{id}": {
            "get": {
                "description": "Retrieve a list of incentives for a given driver ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Drivers Incentive"
                ],
                "summary": "Get Driver Incentives List",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Driver ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Incentives",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.DriverIncentive"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid Driver ID",
                        "schema": {
                            "$ref": "#/definitions/pkg.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "No driverIncentive found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Driver not found / Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/pkg.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/driver-incentives/driver/{id}/total": {
            "get": {
                "description": "Retrieve the total incentive amount for a given driver ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Drivers Incentive"
                ],
                "summary": "Get Total Driver Incentives",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Driver ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Total Incentive for Driver",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid Driver ID",
                        "schema": {
                            "$ref": "#/definitions/pkg.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Driver not found / Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/pkg.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/driver-incentives/{id}": {
            "get": {
                "description": "Retrieve a specific driver incentive by its ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "driverIncentives"
                ],
                "summary": "Retrieve a driver incentive by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Driver Incentive ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Driver incentive details",
                        "schema": {
                            "$ref": "#/definitions/models.DriverIncentive"
                        }
                    },
                    "400": {
                        "description": "Invalid driver incentive ID",
                        "schema": {
                            "$ref": "#/definitions/pkg.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Driver incentive not found",
                        "schema": {
                            "$ref": "#/definitions/pkg.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/pkg.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Modify details of an existing driver incentive.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "driverIncentives"
                ],
                "summary": "Update a driver incentive",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Driver Incentive ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated driver incentive data",
                        "name": "driverIncentive",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.InputDriverIncentive"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated driver incentive",
                        "schema": {
                            "$ref": "#/definitions/models.DriverIncentive"
                        }
                    },
                    "400": {
                        "description": "Invalid required param or request body",
                        "schema": {
                            "$ref": "#/definitions/pkg.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Driver incentive not found",
                        "schema": {
                            "$ref": "#/definitions/pkg.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/pkg.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Remove a driver incentive using its ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "driverIncentives"
                ],
                "summary": "Delete a driver incentive by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Driver Incentive ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful deletion message",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid required param",
                        "schema": {
                            "$ref": "#/definitions/pkg.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Driver incentive not found",
                        "schema": {
                            "$ref": "#/definitions/pkg.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/pkg.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/drivers": {
            "get": {
                "description": "Retrieve a list of all drivers.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "drivers"
                ],
                "summary": "Retrieve list of drivers",
                "responses": {
                    "200": {
                        "description": "List of drivers",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Driver"
                            }
                        }
                    },
                    "404": {
                        "description": "No driver found",
                        "schema": {
                            "$ref": "#/definitions/pkg.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/pkg.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new driver.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "drivers"
                ],
                "summary": "Create a new driver",
                "parameters": [
                    {
                        "description": "Driver data",
                        "name": "driver",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.InputDriver"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Driver created successfully",
                        "schema": {
                            "$ref": "#/definitions/models.Driver"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/pkg.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/pkg.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/drivers/{id}": {
            "get": {
                "description": "Retrieve a driver by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "drivers"
                ],
                "summary": "Retrieve driver by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Driver ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Driver data",
                        "schema": {
                            "$ref": "#/definitions/models.Driver"
                        }
                    },
                    "400": {
                        "description": "Invalid driver ID",
                        "schema": {
                            "$ref": "#/definitions/pkg.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Driver not found",
                        "schema": {
                            "$ref": "#/definitions/pkg.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/pkg.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update information of a driver.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "drivers"
                ],
                "summary": "Update driver information",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Driver ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated driver data",
                        "name": "driver",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.InputDriver"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Driver updated successfully",
                        "schema": {
                            "$ref": "#/definitions/models.Driver"
                        }
                    },
                    "400": {
                        "description": "Invalid required param",
                        "schema": {
                            "$ref": "#/definitions/pkg.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Driver not found",
                        "schema": {
                            "$ref": "#/definitions/pkg.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/pkg.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a driver by its ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "drivers"
                ],
                "summary": "Delete driver by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Driver ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Driver deleted successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid required param",
                        "schema": {
                            "$ref": "#/definitions/pkg.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Driver not found",
                        "schema": {
                            "$ref": "#/definitions/pkg.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/pkg.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/memberships": {
            "get": {
                "description": "Retrieve a list of all memberships.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "memberships"
                ],
                "summary": "Retrieve list of memberships",
                "responses": {
                    "200": {
                        "description": "List of memberships",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Membership"
                            }
                        }
                    },
                    "404": {
                        "description": "No membership found",
                        "schema": {
                            "$ref": "#/definitions/pkg.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/pkg.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new membership.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "memberships"
                ],
                "summary": "Create a new membership",
                "parameters": [
                    {
                        "description": "Membership data",
                        "name": "membership",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.InputMembership"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created membership data",
                        "schema": {
                            "$ref": "#/definitions/models.Membership"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/pkg.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/pkg.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/memberships/{id}": {
            "get": {
                "description": "Retrieve a membership by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "memberships"
                ],
                "summary": "Retrieve membership by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Membership ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Membership data",
                        "schema": {
                            "$ref": "#/definitions/models.Membership"
                        }
                    },
                    "400": {
                        "description": "Invalid membership ID",
                        "schema": {
                            "$ref": "#/definitions/pkg.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Membership not found",
                        "schema": {
                            "$ref": "#/definitions/pkg.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/pkg.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update information of a membership.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "memberships"
                ],
                "summary": "Update membership information",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Membership ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated membership data",
                        "name": "membership",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.InputMembership"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated membership data",
                        "schema": {
                            "$ref": "#/definitions/models.Membership"
                        }
                    },
                    "400": {
                        "description": "Invalid membership ID or request body",
                        "schema": {
                            "$ref": "#/definitions/pkg.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Membership not found",
                        "schema": {
                            "$ref": "#/definitions/pkg.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/pkg.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a membership by its ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "memberships"
                ],
                "summary": "Delete membership by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Membership ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success message and deleted membership data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid membership ID",
                        "schema": {
                            "$ref": "#/definitions/pkg.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Membership not found",
                        "schema": {
                            "$ref": "#/definitions/pkg.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/pkg.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Booking": {
            "type": "object",
            "properties": {
                "book_type_id": {
                    "type": "integer"
                },
                "booking_type": {
                    "$ref": "#/definitions/models.BookingType"
                },
                "car": {
                    "$ref": "#/definitions/models.Car"
                },
                "car_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "customer": {
                    "$ref": "#/definitions/models.Customer"
                },
                "customer_id": {
                    "type": "integer"
                },
                "discount": {
                    "type": "integer"
                },
                "driver": {
                    "$ref": "#/definitions/models.Driver"
                },
                "driver_id": {
                    "type": "integer"
                },
                "end_rent": {
                    "type": "string"
                },
                "finished": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "start_rent": {
                    "type": "string"
                },
                "total_cost": {
                    "type": "integer"
                },
                "total_driver_cost": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.BookingType": {
            "type": "object",
            "properties": {
                "booking_type": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.Car": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "daily_rent": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "stock": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.Customer": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "membership": {
                    "$ref": "#/definitions/models.Membership"
                },
                "membership_id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "nik": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.Driver": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "daily_cost": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "nik": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.DriverIncentive": {
            "type": "object",
            "properties": {
                "booking": {
                    "$ref": "#/definitions/models.Booking"
                },
                "booking_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "incentive": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.InputBooking": {
            "type": "object",
            "required": [
                "car_id",
                "customer_id",
                "end_rent",
                "start_rent"
            ],
            "properties": {
                "book_type_id": {
                    "type": "integer"
                },
                "car_id": {
                    "type": "integer"
                },
                "customer_id": {
                    "type": "integer"
                },
                "driver_id": {
                    "type": "integer"
                },
                "end_rent": {
                    "type": "string"
                },
                "finished": {
                    "type": "boolean"
                },
                "start_rent": {
                    "type": "string"
                }
            }
        },
        "models.InputBookingType": {
            "type": "object",
            "required": [
                "booking_type",
                "description"
            ],
            "properties": {
                "booking_type": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                }
            }
        },
        "models.InputCar": {
            "type": "object",
            "required": [
                "daily_rent",
                "name",
                "stock"
            ],
            "properties": {
                "daily_rent": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "stock": {
                    "type": "integer"
                }
            }
        },
        "models.InputCustomer": {
            "type": "object",
            "required": [
                "name",
                "nik",
                "phone"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "nik": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                }
            }
        },
        "models.InputDriver": {
            "type": "object",
            "required": [
                "daily_cost",
                "name",
                "nik",
                "phone"
            ],
            "properties": {
                "daily_cost": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "nik": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                }
            }
        },
        "models.InputDriverIncentive": {
            "type": "object",
            "required": [
                "booking_id",
                "incentive"
            ],
            "properties": {
                "booking_id": {
                    "type": "integer"
                },
                "incentive": {
                    "type": "integer"
                }
            }
        },
        "models.InputMembership": {
            "type": "object",
            "required": [
                "discount",
                "membership_name"
            ],
            "properties": {
                "discount": {
                    "type": "integer"
                },
                "membership_name": {
                    "type": "string"
                }
            }
        },
        "models.InputMembershipID": {
            "type": "object",
            "required": [
                "membership_id"
            ],
            "properties": {
                "membership_id": {
                    "type": "integer"
                }
            }
        },
        "models.Membership": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "discount": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "membership_name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "pkg.ErrorResponse": {
            "type": "object",
            "properties": {
                "errors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "message": {
                    "type": "string"
                }
            }
        }
    }
}